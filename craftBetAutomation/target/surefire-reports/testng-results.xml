<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="65" passed="56" failed="9" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-21T10:44:48 AMT" name="All Test Suite" finished-at="2022-07-21T10:59:41 AMT" duration-ms="893072">
    <groups>
    </groups>
    <test started-at="2022-07-21T10:44:48 AMT" name="testCases" finished-at="2022-07-21T10:59:41 AMT" duration-ms="893072">
      <class name="testCases.SignUpQuickRegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:01 AMT" name="setup" finished-at="2022-07-21T10:45:05 AMT" duration-ms="4427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:05 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:06 AMT" duration-ms="563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterLabelsPresenceVerification_Test()[pri:1, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:06 AMT" name="SignUpPopUpQuickRegisterLabelsPresenceVerification_Test" description="Validate SignUp PopUps labels" finished-at="2022-07-21T10:45:06 AMT" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterLabelsPresenceVerification_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:06 AMT" name="tearDown" finished-at="2022-07-21T10:45:06 AMT" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:17 AMT" name="setup" finished-at="2022-07-21T10:45:21 AMT" duration-ms="4478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:21 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:22 AMT" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterLogoPresenceVerification_Test()[pri:2, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:22 AMT" name="SignUpPopUpQuickRegisterLogoPresenceVerification_Test" description="Validate on Sign Up Pop Up Logo Presence" finished-at="2022-07-21T10:45:22 AMT" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterLogoPresenceVerification_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:22 AMT" name="tearDown" finished-at="2022-07-21T10:45:22 AMT" duration-ms="190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:34 AMT" name="setup" finished-at="2022-07-21T10:45:38 AMT" duration-ms="4125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:38 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:38 AMT" duration-ms="535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterRegisterByDropDownVerification_Test()[pri:3, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:38 AMT" name="SignUpPopUpQuickRegisterRegisterByDropDownVerification_Test" description="Validate on Sign Up Pop Up Email/Mobile Drop down functionality" finished-at="2022-07-21T10:45:39 AMT" duration-ms="475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterRegisterByDropDownVerification_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:39 AMT" name="tearDown" finished-at="2022-07-21T10:45:39 AMT" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:50 AMT" name="setup" finished-at="2022-07-21T10:45:55 AMT" duration-ms="4390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:55 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:55 AMT" duration-ms="446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterCurrencyDropDownVerification_Test()[pri:4, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:55 AMT" name="SignUpPopUpQuickRegisterCurrencyDropDownVerification_Test" description="Validate on Sign Up Pop Up Currency Drop down functionality" finished-at="2022-07-21T10:45:56 AMT" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterCurrencyDropDownVerification_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:45:56 AMT" name="tearDown" finished-at="2022-07-21T10:45:56 AMT" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:07 AMT" name="setup" finished-at="2022-07-21T10:54:11 AMT" duration-ms="3833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:11 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:54:11 AMT" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpCloseButtonFunctionality()[pri:5, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:11 AMT" name="SignUpPopUpCloseButtonFunctionality" description="Validate on Sign Up Pop Up close(X) button functionality" finished-at="2022-07-21T10:54:12 AMT" duration-ms="635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpCloseButtonFunctionality -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:12 AMT" name="tearDown" finished-at="2022-07-21T10:54:12 AMT" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:12 AMT" name="setup" finished-at="2022-07-21T10:54:16 AMT" duration-ms="3872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:16 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:54:16 AMT" duration-ms="390" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterRegisterPrivacyPolicy()[pri:5, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:16 AMT" name="SignUpPopUpQuickRegisterRegisterPrivacyPolicy" description="Validate on Sign Up Pop Up Terms  and conditions check box need to be checked" finished-at="2022-07-21T10:54:17 AMT" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterRegisterPrivacyPolicy -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:17 AMT" name="tearDown" finished-at="2022-07-21T10:54:17 AMT" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:22 AMT" name="setup" finished-at="2022-07-21T10:54:26 AMT" duration-ms="3917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:26 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:54:26 AMT" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpTermsAndConditionsLinkFunctionality()[pri:6, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:26 AMT" name="SignUpPopUpTermsAndConditionsLinkFunctionality" description="Validate on Sign Up Pop Up Terms and conditions link functionality" finished-at="2022-07-21T10:54:26 AMT" duration-ms="446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpTermsAndConditionsLinkFunctionality -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:26 AMT" name="tearDown" finished-at="2022-07-21T10:54:27 AMT" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:31 AMT" name="setup" finished-at="2022-07-21T10:54:35 AMT" duration-ms="3859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:35 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:54:35 AMT" duration-ms="379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpLogInLinkFunctionality()[pri:7, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:35 AMT" name="SignUpPopUpLogInLinkFunctionality" description="Validate on Sign Up Pop Up LogIn link functionality" finished-at="2022-07-21T10:54:35 AMT" duration-ms="152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpLogInLinkFunctionality -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:35 AMT" name="tearDown" finished-at="2022-07-21T10:54:36 AMT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:40 AMT" name="setup" finished-at="2022-07-21T10:54:44 AMT" duration-ms="3783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:44 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:54:45 AMT" duration-ms="337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickFullRegistrationButtonFunctionality()[pri:8, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:45 AMT" name="SignUpPopUpQuickFullRegistrationButtonFunctionality" description="Validate on Sign Up Pop Up Quick/Full Register button functionality" finished-at="2022-07-21T10:54:45 AMT" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickFullRegistrationButtonFunctionality -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:54:45 AMT" name="tearDown" finished-at="2022-07-21T10:54:45 AMT" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:30 AMT" name="setup" finished-at="2022-07-21T10:57:34 AMT" duration-ms="3896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:34 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:57:35 AMT" duration-ms="385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailPositiveTest()[pri:20, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:35 AMT" name="SignUpPopUpQuickRegisterWithEmailPositiveTest" description="Validate on Sign Up Pop Up sign up with valid Email" finished-at="2022-07-21T10:57:37 AMT" duration-ms="2584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailPositiveTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:37 AMT" name="tearDown" finished-at="2022-07-21T10:57:37 AMT" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:37 AMT" name="setup" finished-at="2022-07-21T10:57:41 AMT" duration-ms="3994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:41 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:57:42 AMT" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailNegativeTest(java.lang.String)[pri:21, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:42 AMT" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" description="Validate on Sign Up Pop Up sign up with valid Email" data-provider="invalidData" finished-at="2022-07-21T10:57:43 AMT" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ASs18.gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:43 AMT" name="tearDown" finished-at="2022-07-21T10:57:43 AMT" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:43 AMT" name="setup" finished-at="2022-07-21T10:57:48 AMT" duration-ms="5061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:48 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:57:49 AMT" duration-ms="407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailNegativeTest(java.lang.String)[pri:21, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:49 AMT" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" description="Validate on Sign Up Pop Up sign up with valid Email" data-provider="invalidData" finished-at="2022-07-21T10:57:49 AMT" duration-ms="871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ASs18@gmail@com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:49 AMT" name="tearDown" finished-at="2022-07-21T10:57:50 AMT" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:50 AMT" name="setup" finished-at="2022-07-21T10:57:54 AMT" duration-ms="4091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:54 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:57:54 AMT" duration-ms="460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailNegativeTest(java.lang.String)[pri:21, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:54 AMT" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" description="Validate on Sign Up Pop Up sign up with valid Email" data-provider="invalidData" finished-at="2022-07-21T10:57:55 AMT" duration-ms="1014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AS\s18@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:55 AMT" name="tearDown" finished-at="2022-07-21T10:57:55 AMT" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:57:55 AMT" name="setup" finished-at="2022-07-21T10:58:00 AMT" duration-ms="4709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:00 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:58:00 AMT" duration-ms="364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailNegativeTest(java.lang.String)[pri:21, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:00 AMT" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" description="Validate on Sign Up Pop Up sign up with valid Email" data-provider="invalidData" finished-at="2022-07-21T10:58:01 AMT" duration-ms="985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AS?s18@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:01 AMT" name="tearDown" finished-at="2022-07-21T10:58:01 AMT" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:01 AMT" name="setup" finished-at="2022-07-21T10:58:06 AMT" duration-ms="4240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:06 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:58:06 AMT" duration-ms="482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailNegativeTest(java.lang.String)[pri:21, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:06 AMT" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" description="Validate on Sign Up Pop Up sign up with valid Email" data-provider="invalidData" finished-at="2022-07-21T10:58:07 AMT" duration-ms="1002" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[AS_s18@gmail.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Invalid email address] but found [Email address must be unique]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Invalid email address] but found [Email address must be unique]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at testCases.SignUpQuickRegisterTest.SignUpPopUpQuickRegisterWithEmailNegativeTest(SignUpQuickRegisterTest.java:256)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:09 AMT" name="tearDown" finished-at="2022-07-21T10:58:09 AMT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:09 AMT" name="setup" finished-at="2022-07-21T10:58:13 AMT" duration-ms="3836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:13 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:58:13 AMT" duration-ms="383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailNegativeTest(java.lang.String)[pri:21, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:13 AMT" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" description="Validate on Sign Up Pop Up sign up with valid Email" data-provider="invalidData" finished-at="2022-07-21T10:58:14 AMT" duration-ms="936" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AS"s18@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:14 AMT" name="tearDown" finished-at="2022-07-21T10:58:14 AMT" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:14 AMT" name="setup" finished-at="2022-07-21T10:58:18 AMT" duration-ms="3749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:18 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:58:18 AMT" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailNegativeTest(java.lang.String)[pri:21, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:18 AMT" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" description="Validate on Sign Up Pop Up sign up with valid Email" data-provider="invalidData" finished-at="2022-07-21T10:58:19 AMT" duration-ms="889" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[AS s18@gmail.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Invalid email address] but found [Email address must be unique]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Invalid email address] but found [Email address must be unique]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at testCases.SignUpQuickRegisterTest.SignUpPopUpQuickRegisterWithEmailNegativeTest(SignUpQuickRegisterTest.java:256)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:21 AMT" name="tearDown" finished-at="2022-07-21T10:58:21 AMT" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:21 AMT" name="setup" finished-at="2022-07-21T10:58:25 AMT" duration-ms="3885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:25 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:58:25 AMT" duration-ms="367" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailNegativeTest(java.lang.String)[pri:21, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:25 AMT" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" description="Validate on Sign Up Pop Up sign up with valid Email" data-provider="invalidData" finished-at="2022-07-21T10:58:26 AMT" duration-ms="1033" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ASs18@gmailcom]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:26 AMT" name="tearDown" finished-at="2022-07-21T10:58:26 AMT" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:26 AMT" name="setup" finished-at="2022-07-21T10:58:30 AMT" duration-ms="4091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:30 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:58:31 AMT" duration-ms="396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithEmailNegativeTest(java.lang.String)[pri:21, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:31 AMT" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" description="Validate on Sign Up Pop Up sign up with valid Email" data-provider="invalidData" finished-at="2022-07-21T10:58:32 AMT" duration-ms="854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ASs18@gmailcom]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:32 AMT" name="tearDown" finished-at="2022-07-21T10:58:32 AMT" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:32 AMT" name="setup" finished-at="2022-07-21T10:58:44 AMT" duration-ms="12098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:44 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:58:44 AMT" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobilePositiveTest()[pri:30, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:44 AMT" name="SignUpPopUpQuickRegisterWithMobilePositiveTest" description="Validate on Sign Up Pop Up sign up with valid Phone number" finished-at="2022-07-21T10:58:48 AMT" duration-ms="3626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobilePositiveTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:48 AMT" name="tearDown" finished-at="2022-07-21T10:58:48 AMT" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:48 AMT" name="setup" finished-at="2022-07-21T10:58:52 AMT" duration-ms="3814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:52 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:58:52 AMT" duration-ms="336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobileNegativeTest(java.lang.String)[pri:31, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:52 AMT" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" description="Validate on Sign Up Pop Up sign up with Invalid Phone number" data-provider="invalidMobileData" finished-at="2022-07-21T10:58:54 AMT" duration-ms="1413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:54 AMT" name="tearDown" finished-at="2022-07-21T10:58:54 AMT" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:54 AMT" name="setup" finished-at="2022-07-21T10:58:58 AMT" duration-ms="3758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:58 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:58:58 AMT" duration-ms="400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobileNegativeTest(java.lang.String)[pri:31, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:58 AMT" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" description="Validate on Sign Up Pop Up sign up with Invalid Phone number" data-provider="invalidMobileData" finished-at="2022-07-21T10:58:59 AMT" duration-ms="1487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[23456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:58:59 AMT" name="tearDown" finished-at="2022-07-21T10:59:00 AMT" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:00 AMT" name="setup" finished-at="2022-07-21T10:59:03 AMT" duration-ms="3940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:03 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:59:04 AMT" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobileNegativeTest(java.lang.String)[pri:31, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:04 AMT" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" description="Validate on Sign Up Pop Up sign up with Invalid Phone number" data-provider="invalidMobileData" finished-at="2022-07-21T10:59:05 AMT" duration-ms="1459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123 45 6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:05 AMT" name="tearDown" finished-at="2022-07-21T10:59:05 AMT" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:05 AMT" name="setup" finished-at="2022-07-21T10:59:09 AMT" duration-ms="3650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:09 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:59:10 AMT" duration-ms="470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobileNegativeTest(java.lang.String)[pri:31, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:10 AMT" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" description="Validate on Sign Up Pop Up sign up with Invalid Phone number" data-provider="invalidMobileData" finished-at="2022-07-21T10:59:11 AMT" duration-ms="1447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123/45/6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:11 AMT" name="tearDown" finished-at="2022-07-21T10:59:11 AMT" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:11 AMT" name="setup" finished-at="2022-07-21T10:59:15 AMT" duration-ms="3945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:15 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:59:15 AMT" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobileNegativeTest(java.lang.String)[pri:31, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:15 AMT" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" description="Validate on Sign Up Pop Up sign up with Invalid Phone number" data-provider="invalidMobileData" finished-at="2022-07-21T10:59:17 AMT" duration-ms="1426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:17 AMT" name="tearDown" finished-at="2022-07-21T10:59:17 AMT" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:17 AMT" name="setup" finished-at="2022-07-21T10:59:21 AMT" duration-ms="3673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:21 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:59:21 AMT" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobileNegativeTest(java.lang.String)[pri:31, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:21 AMT" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" description="Validate on Sign Up Pop Up sign up with Invalid Phone number" data-provider="invalidMobileData" finished-at="2022-07-21T10:59:23 AMT" duration-ms="1491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123+45-6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:23 AMT" name="tearDown" finished-at="2022-07-21T10:59:23 AMT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:23 AMT" name="setup" finished-at="2022-07-21T10:59:26 AMT" duration-ms="3807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:26 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:59:27 AMT" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobileNegativeTest(java.lang.String)[pri:31, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:27 AMT" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" description="Validate on Sign Up Pop Up sign up with Invalid Phone number" data-provider="invalidMobileData" finished-at="2022-07-21T10:59:28 AMT" duration-ms="1413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:28 AMT" name="tearDown" finished-at="2022-07-21T10:59:28 AMT" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:28 AMT" name="setup" finished-at="2022-07-21T10:59:32 AMT" duration-ms="3689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:32 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:59:32 AMT" duration-ms="401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobileNegativeTest(java.lang.String)[pri:31, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:32 AMT" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" description="Validate on Sign Up Pop Up sign up with Invalid Phone number" data-provider="invalidMobileData" finished-at="2022-07-21T10:59:34 AMT" duration-ms="1504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ 1 2 3 4 5 6 7 ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:34 AMT" name="tearDown" finished-at="2022-07-21T10:59:34 AMT" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:34 AMT" name="setup" finished-at="2022-07-21T10:59:38 AMT" duration-ms="3887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:38 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:59:38 AMT" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="SignUpPopUpQuickRegisterWithMobileNegativeTest(java.lang.String)[pri:31, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:38 AMT" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" description="Validate on Sign Up Pop Up sign up with Invalid Phone number" data-provider="invalidMobileData" finished-at="2022-07-21T10:59:40 AMT" duration-ms="1425" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [craft_btn reg_btn not_active] but found [craft_btn reg_btn active-item]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [craft_btn reg_btn not_active] but found [craft_btn reg_btn active-item]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at testCases.SignUpQuickRegisterTest.SignUpPopUpQuickRegisterWithMobileNegativeTest(SignUpQuickRegisterTest.java:322)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.SignUpQuickRegisterTest@6892b3b6]" started-at="2022-07-21T10:59:41 AMT" name="tearDown" finished-at="2022-07-21T10:59:41 AMT" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.SignUpQuickRegisterTest -->
      <class name="testCases.PasswordRecoveryTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:44:55 AMT" name="setup" finished-at="2022-07-21T10:45:00 AMT" duration-ms="4791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:00 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:00 AMT" duration-ms="455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpLabelsPresenceVerification_Test()[pri:1, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:00 AMT" name="RecoveryPopUpLabelsPresenceVerification_Test" description="Validate on Password Recovery PopUp Title, Email/mobile or username input Label, Info Message, Help message, Text on Send Me Recovery Button" finished-at="2022-07-21T10:45:01 AMT" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpLabelsPresenceVerification_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:01 AMT" name="tearDown" finished-at="2022-07-21T10:45:01 AMT" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:12 AMT" name="setup" finished-at="2022-07-21T10:45:16 AMT" duration-ms="4412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:16 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:17 AMT" duration-ms="583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpLogoPresenceVerification_Test()[pri:2, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:17 AMT" name="RecoveryPopUpLogoPresenceVerification_Test" description="Validate on Password Recovery Pop Up Logo Presence" finished-at="2022-07-21T10:45:17 AMT" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpLogoPresenceVerification_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:17 AMT" name="tearDown" finished-at="2022-07-21T10:45:17 AMT" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:28 AMT" name="setup" finished-at="2022-07-21T10:45:32 AMT" duration-ms="4426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:32 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:33 AMT" duration-ms="488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpSupportLink_Test()[pri:3, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:33 AMT" name="RecoveryPopUpSupportLink_Test" description="Validate on Password Recovery Pop Up Support link" finished-at="2022-07-21T10:45:33 AMT" duration-ms="350" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [https://craftbet.com/forgot-password] but found [https://craftbet.com/forgot-password]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [https://craftbet.com/forgot-password] but found [https://craftbet.com/forgot-password]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failEquals(Assert.java:1417)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:156)
at org.testng.Assert.assertNotEquals(Assert.java:2033)
at org.testng.Assert.assertNotEquals(Assert.java:2055)
at testCases.PasswordRecoveryTest.RecoveryPopUpSupportLink_Test(PasswordRecoveryTest.java:84)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpSupportLink_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:34 AMT" name="tearDown" finished-at="2022-07-21T10:45:34 AMT" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:44 AMT" name="setup" finished-at="2022-07-21T10:45:49 AMT" duration-ms="4530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:49 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:50 AMT" duration-ms="631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpPositiveTest()[pri:4, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:50 AMT" name="RecoveryPopUpPositiveTest" description="Validate on Password recovery pop up functionality of Recovery with valid credentials" finished-at="2022-07-21T10:45:50 AMT" duration-ms="557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpPositiveTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:45:50 AMT" name="tearDown" finished-at="2022-07-21T10:45:50 AMT" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:02 AMT" name="setup" finished-at="2022-07-21T10:46:06 AMT" duration-ms="4088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:06 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:46:07 AMT" duration-ms="464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:07 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:46:27 AMT" duration-ms="20590" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testCases.PasswordRecoveryTest.RecoveryPopUpNegativeTest(PasswordRecoveryTest.java:125)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:28 AMT" name="tearDown" finished-at="2022-07-21T10:46:28 AMT" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:28 AMT" name="setup" finished-at="2022-07-21T10:46:32 AMT" duration-ms="3971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:32 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:46:32 AMT" duration-ms="442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:32 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:46:53 AMT" duration-ms="20607" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[23456]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testCases.PasswordRecoveryTest.RecoveryPopUpNegativeTest(PasswordRecoveryTest.java:125)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:54 AMT" name="tearDown" finished-at="2022-07-21T10:46:54 AMT" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:54 AMT" name="setup" finished-at="2022-07-21T10:46:58 AMT" duration-ms="4604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:58 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:46:59 AMT" duration-ms="491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:46:59 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:47:39 AMT" duration-ms="40299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[123abc123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:47:39 AMT" name="tearDown" finished-at="2022-07-21T10:47:39 AMT" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:47:39 AMT" name="setup" finished-at="2022-07-21T10:47:44 AMT" duration-ms="4556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:47:44 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:47:44 AMT" duration-ms="542" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:47:44 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:48:25 AMT" duration-ms="40353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.12/34?56]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:48:25 AMT" name="tearDown" finished-at="2022-07-21T10:48:25 AMT" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:48:25 AMT" name="setup" finished-at="2022-07-21T10:48:29 AMT" duration-ms="4340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:48:29 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:48:30 AMT" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:48:30 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:49:10 AMT" duration-ms="40371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.12345.6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:49:10 AMT" name="tearDown" finished-at="2022-07-21T10:49:10 AMT" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:49:10 AMT" name="setup" finished-at="2022-07-21T10:49:14 AMT" duration-ms="3553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:49:14 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:49:15 AMT" duration-ms="555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:49:15 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:49:55 AMT" duration-ms="40372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ g.babloyan@iqsoft.am]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:49:55 AMT" name="tearDown" finished-at="2022-07-21T10:49:55 AMT" duration-ms="124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:49:55 AMT" name="setup" finished-at="2022-07-21T10:49:59 AMT" duration-ms="4086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:49:59 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:50:00 AMT" duration-ms="609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:50:00 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:50:40 AMT" duration-ms="40313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[g.babloyan@iqsoft.am ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:50:40 AMT" name="tearDown" finished-at="2022-07-21T10:50:40 AMT" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:50:40 AMT" name="setup" finished-at="2022-07-21T10:50:45 AMT" duration-ms="4730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:50:45 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:50:45 AMT" duration-ms="448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:50:45 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:51:26 AMT" duration-ms="40373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[g .babloyan@iqsoft.am]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:51:26 AMT" name="tearDown" finished-at="2022-07-21T10:51:26 AMT" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:51:26 AMT" name="setup" finished-at="2022-07-21T10:51:30 AMT" duration-ms="4241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:51:30 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:51:31 AMT" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:51:31 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:52:11 AMT" duration-ms="40389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[g. babloyan@iqsoft.am]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:52:11 AMT" name="tearDown" finished-at="2022-07-21T10:52:11 AMT" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:52:11 AMT" name="setup" finished-at="2022-07-21T10:52:15 AMT" duration-ms="3816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:52:15 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:52:15 AMT" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:52:15 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:52:56 AMT" duration-ms="40366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[g.babloyan@iqsoft.a m]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:52:56 AMT" name="tearDown" finished-at="2022-07-21T10:52:56 AMT" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:52:56 AMT" name="setup" finished-at="2022-07-21T10:53:00 AMT" duration-ms="4417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:53:00 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:53:01 AMT" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:53:01 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:53:21 AMT" duration-ms="20599" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[g_babloyan@mail.com]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testCases.PasswordRecoveryTest.RecoveryPopUpNegativeTest(PasswordRecoveryTest.java:125)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:53:22 AMT" name="tearDown" finished-at="2022-07-21T10:53:22 AMT" duration-ms="126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:53:22 AMT" name="setup" finished-at="2022-07-21T10:53:26 AMT" duration-ms="4107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:53:26 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:53:27 AMT" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="RecoveryPopUpNegativeTest(java.lang.String)[pri:5, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:53:27 AMT" name="RecoveryPopUpNegativeTest" description="Validate on Password recovery pop up functionality of Recovery with invalid credentials" data-provider="invalidRecoveryData" finished-at="2022-07-21T10:54:07 AMT" duration-ms="40392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gor@babloyan@mail.ru]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RecoveryPopUpNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.PasswordRecoveryTest@2a265ea9]" started-at="2022-07-21T10:54:07 AMT" name="tearDown" finished-at="2022-07-21T10:54:07 AMT" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.PasswordRecoveryTest -->
      <class name="testCases.LoginPopUpTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:44:48 AMT" name="setup" finished-at="2022-07-21T10:44:54 AMT" duration-ms="5827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:44:54 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:44:55 AMT" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLabelsPresenceVerification_Test()[pri:1, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:44:55 AMT" name="loginPopUpLabelsPresenceVerification_Test" description="Validate on Log_in Pop Up Header, Email/mobile or username, Password, Remember me, You can Sign in with, Don&#039;t have an account? Sign Up, Don&#039;t have an account? Sign Up, Safe and Secure labels, Login Buttons text" finished-at="2022-07-21T10:44:55 AMT" duration-ms="543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLabelsPresenceVerification_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:44:55 AMT" name="tearDown" finished-at="2022-07-21T10:44:55 AMT" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:06 AMT" name="setup" finished-at="2022-07-21T10:45:11 AMT" duration-ms="4455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:11 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:11 AMT" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogoPresenceVerification_Test()[pri:2, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:11 AMT" name="loginPopUpLogoPresenceVerification_Test" description="Validate on Log_in Pop Up Logo Presence" finished-at="2022-07-21T10:45:11 AMT" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogoPresenceVerification_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:11 AMT" name="tearDown" finished-at="2022-07-21T10:45:12 AMT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:22 AMT" name="setup" finished-at="2022-07-21T10:45:27 AMT" duration-ms="4656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:27 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:27 AMT" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpCloseButtonFunctionality_Test()[pri:3, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:27 AMT" name="loginPopUpCloseButtonFunctionality_Test" description="Validate on Log_in Pop Up Close (X) button functionality" finished-at="2022-07-21T10:45:28 AMT" duration-ms="687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpCloseButtonFunctionality_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:28 AMT" name="tearDown" finished-at="2022-07-21T10:45:28 AMT" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:39 AMT" name="setup" finished-at="2022-07-21T10:45:44 AMT" duration-ms="4479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:44 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:45:44 AMT" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpEyeButtonFunctionality_Test()[pri:4, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:44 AMT" name="loginPopUpEyeButtonFunctionality_Test" description="Validate on Log_in Pop Up eye functionality" finished-at="2022-07-21T10:45:44 AMT" duration-ms="369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpEyeButtonFunctionality_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:44 AMT" name="tearDown" finished-at="2022-07-21T10:45:44 AMT" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:45:56 AMT" name="setup" finished-at="2022-07-21T10:46:01 AMT" duration-ms="4914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:46:01 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:46:01 AMT" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpRememberMeLabelClickAbility_Test()[pri:5, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:46:01 AMT" name="loginPopUpRememberMeLabelClickAbility_Test" description="Validate on Log_in Pop Up Remember me label click-ability" finished-at="2022-07-21T10:46:01 AMT" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpRememberMeLabelClickAbility_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:46:01 AMT" name="tearDown" finished-at="2022-07-21T10:46:01 AMT" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:17 AMT" name="setup" finished-at="2022-07-21T10:54:21 AMT" duration-ms="4082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:21 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:54:21 AMT" duration-ms="379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpCheckBoxClickAbility_Test()[pri:6, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:21 AMT" name="loginPopUpCheckBoxClickAbility_Test" description="Validate on Log_in Pop Up checkBox functionality" finished-at="2022-07-21T10:54:22 AMT" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpCheckBoxClickAbility_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:22 AMT" name="tearDown" finished-at="2022-07-21T10:54:22 AMT" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:27 AMT" name="setup" finished-at="2022-07-21T10:54:30 AMT" duration-ms="3790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:30 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:54:31 AMT" duration-ms="387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpForgotPasswordLink_Test()[pri:7, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:31 AMT" name="loginPopUpForgotPasswordLink_Test" description="Validate on Log_in Pop Up Forgot password link functionality" finished-at="2022-07-21T10:54:31 AMT" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpForgotPasswordLink_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:31 AMT" name="tearDown" finished-at="2022-07-21T10:54:31 AMT" duration-ms="132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:36 AMT" name="setup" finished-at="2022-07-21T10:54:40 AMT" duration-ms="4037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:40 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:54:40 AMT" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpSignUpLink_Test()[pri:8, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:40 AMT" name="loginPopUpSignUpLink_Test" description="Validate on Log_in Pop Up SignUp link functionality" finished-at="2022-07-21T10:54:40 AMT" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpSignUpLink_Test -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:40 AMT" name="tearDown" finished-at="2022-07-21T10:54:40 AMT" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:45 AMT" name="setup" finished-at="2022-07-21T10:54:49 AMT" duration-ms="3909" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:49 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:54:49 AMT" duration-ms="378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInPositiveTest()[pri:9, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:54:49 AMT" name="loginPopUpLogInPositiveTest" description="Validate on Log_in Pop Up Log_In functionality with valid credentials" finished-at="2022-07-21T10:55:00 AMT" duration-ms="10358" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='user_id']"}
  (Session info: headless chrome=103.0.5060.114)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.2.1', revision: 'ac4d0fdd4a'
System info: host: 'DESKTOP-PO3T4V3', ip: '10.50.17.113', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [62d6a0687b5e1afc9761a345f94595fc, findElement {using=xpath, value=//*[@class='user_id']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 103.0.5060.134 (8ec6fce403b..., userDataDir: C:\Users\NERSES~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:59801}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59801/devtoo..., se:cdpVersion: 103.0.5060.114, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 62d6a0687b5e1afc9761a345f94595fc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='user_id']"}
  (Session info: headless chrome=103.0.5060.114)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.2.1', revision: 'ac4d0fdd4a'
System info: host: 'DESKTOP-PO3T4V3', ip: '10.50.17.113', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [62d6a0687b5e1afc9761a345f94595fc, findElement {using=xpath, value=//*[@class='user_id']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.114, chrome: {chromedriverVersion: 103.0.5060.134 (8ec6fce403b..., userDataDir: C:\Users\NERSES~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:59801}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:59801/devtoo..., se:cdpVersion: 103.0.5060.114, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 62d6a0687b5e1afc9761a345f94595fc
at jdk.internal.reflect.GeneratedConstructorAccessor59.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:551)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:369)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:361)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.isEnabled(Unknown Source)
at pageObjects.BasePage.elementIsEnable(BasePage.java:102)
at pageObjects.CraftBet_Header_Page.userIdLabelIsEnabled(CraftBet_Header_Page.java:205)
at testCases.LoginPopUpTest.loginPopUpLogInPositiveTest(LoginPopUpTest.java:187)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInPositiveTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:02 AMT" name="tearDown" finished-at="2022-07-21T10:55:02 AMT" duration-ms="142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:02 AMT" name="setup" finished-at="2022-07-21T10:55:07 AMT" duration-ms="5102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:07 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:55:07 AMT" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInNegativeTest(java.lang.String,java.lang.String)[pri:10, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:07 AMT" name="loginPopUpLogInNegativeTest" description="Validate on Log_in Pop Up Log_In functionality with invalid data" data-provider="invalidLoginData" finished-at="2022-07-21T10:55:18 AMT" duration-ms="10320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1630651]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ nsc9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:18 AMT" name="tearDown" finished-at="2022-07-21T10:55:18 AMT" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:18 AMT" name="setup" finished-at="2022-07-21T10:55:22 AMT" duration-ms="3732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:22 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:55:22 AMT" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInNegativeTest(java.lang.String,java.lang.String)[pri:10, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:22 AMT" name="loginPopUpLogInNegativeTest" description="Validate on Log_in Pop Up Log_In functionality with invalid data" data-provider="invalidLoginData" finished-at="2022-07-21T10:55:32 AMT" duration-ms="10344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1630651]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nsc9  ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:32 AMT" name="tearDown" finished-at="2022-07-21T10:55:33 AMT" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:33 AMT" name="setup" finished-at="2022-07-21T10:55:37 AMT" duration-ms="4090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:37 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:55:37 AMT" duration-ms="321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInNegativeTest(java.lang.String,java.lang.String)[pri:10, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:37 AMT" name="loginPopUpLogInNegativeTest" description="Validate on Log_in Pop Up Log_In functionality with invalid data" data-provider="invalidLoginData" finished-at="2022-07-21T10:55:48 AMT" duration-ms="10371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1630651]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ns c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:48 AMT" name="tearDown" finished-at="2022-07-21T10:55:48 AMT" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:48 AMT" name="setup" finished-at="2022-07-21T10:55:52 AMT" duration-ms="4104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:52 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:55:52 AMT" duration-ms="401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInNegativeTest(java.lang.String,java.lang.String)[pri:10, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:55:52 AMT" name="loginPopUpLogInNegativeTest" description="Validate on Log_in Pop Up Log_In functionality with invalid data" data-provider="invalidLoginData" finished-at="2022-07-21T10:56:03 AMT" duration-ms="10379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1630651]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[     ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:03 AMT" name="tearDown" finished-at="2022-07-21T10:56:03 AMT" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:03 AMT" name="setup" finished-at="2022-07-21T10:56:07 AMT" duration-ms="3936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:07 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:56:07 AMT" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInNegativeTest(java.lang.String,java.lang.String)[pri:10, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:07 AMT" name="loginPopUpLogInNegativeTest" description="Validate on Log_in Pop Up Log_In functionality with invalid data" data-provider="invalidLoginData" finished-at="2022-07-21T10:56:17 AMT" duration-ms="10381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1630651]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[?nsc9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:17 AMT" name="tearDown" finished-at="2022-07-21T10:56:18 AMT" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:18 AMT" name="setup" finished-at="2022-07-21T10:56:21 AMT" duration-ms="3763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:21 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:56:22 AMT" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInNegativeTest(java.lang.String,java.lang.String)[pri:10, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:22 AMT" name="loginPopUpLogInNegativeTest" description="Validate on Log_in Pop Up Log_In functionality with invalid data" data-provider="invalidLoginData" finished-at="2022-07-21T10:56:32 AMT" duration-ms="10379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nsc9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[U1630651]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:32 AMT" name="tearDown" finished-at="2022-07-21T10:56:32 AMT" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:32 AMT" name="setup" finished-at="2022-07-21T10:56:36 AMT" duration-ms="3945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:36 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:56:37 AMT" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInNegativeTest(java.lang.String,java.lang.String)[pri:10, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:37 AMT" name="loginPopUpLogInNegativeTest" description="Validate on Log_in Pop Up Log_In functionality with invalid data" data-provider="invalidLoginData" finished-at="2022-07-21T10:56:47 AMT" duration-ms="10309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nsc9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:47 AMT" name="tearDown" finished-at="2022-07-21T10:56:47 AMT" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:47 AMT" name="setup" finished-at="2022-07-21T10:56:51 AMT" duration-ms="3944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:51 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:56:51 AMT" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInNegativeTest(java.lang.String,java.lang.String)[pri:10, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:56:51 AMT" name="loginPopUpLogInNegativeTest" description="Validate on Log_in Pop Up Log_In functionality with invalid data" data-provider="invalidLoginData" finished-at="2022-07-21T10:57:02 AMT" duration-ms="10305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[U1630651]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:02 AMT" name="tearDown" finished-at="2022-07-21T10:57:02 AMT" duration-ms="150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:02 AMT" name="setup" finished-at="2022-07-21T10:57:05 AMT" duration-ms="3676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:05 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:57:06 AMT" duration-ms="337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpLogInNegativeTest(java.lang.String,java.lang.String)[pri:10, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:06 AMT" name="loginPopUpLogInNegativeTest" description="Validate on Log_in Pop Up Log_In functionality with invalid data" data-provider="invalidLoginData" finished-at="2022-07-21T10:57:16 AMT" duration-ms="10328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpLogInNegativeTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:16 AMT" name="tearDown" finished-at="2022-07-21T10:57:16 AMT" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:16 AMT" name="setup" finished-at="2022-07-21T10:57:20 AMT" duration-ms="4145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:20 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:57:21 AMT" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpErrorMessageValidationInvalidUsername()[pri:11, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:21 AMT" name="loginPopUpErrorMessageValidationInvalidUsername" description="Validate on Log_in Pop Up Error message with invalid password" finished-at="2022-07-21T10:57:22 AMT" duration-ms="1369" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Username or Password is incorrect. Please try again.] but found [Younger]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Username or Password is incorrect. Please try again.] but found [Younger]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at testCases.LoginPopUpTest.loginPopUpErrorMessageValidationInvalidUsername(LoginPopUpTest.java:259)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpErrorMessageValidationInvalidUsername -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:24 AMT" name="tearDown" finished-at="2022-07-21T10:57:24 AMT" duration-ms="326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:24 AMT" name="setup" finished-at="2022-07-21T10:57:29 AMT" duration-ms="4284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="goToLoginPopUp()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:29 AMT" name="goToLoginPopUp" finished-at="2022-07-21T10:57:29 AMT" duration-ms="338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginPopUp -->
        <test-method signature="loginPopUpErrorMessageValidationInvalidPassword()[pri:12, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:29 AMT" name="loginPopUpErrorMessageValidationInvalidPassword" description="Validate on Log_in Pop Up error message with invalid username" finished-at="2022-07-21T10:57:30 AMT" duration-ms="1371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPopUpErrorMessageValidationInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.LoginPopUpTest@130c12b7]" started-at="2022-07-21T10:57:30 AMT" name="tearDown" finished-at="2022-07-21T10:57:30 AMT" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.LoginPopUpTest -->
    </test> <!-- testCases -->
  </suite> <!-- All Test Suite -->
</testng-results>
