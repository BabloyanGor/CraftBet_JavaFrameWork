<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="2" hostname="DESKTOP-PO3T4V3" failures="6" tests="54" name="testCases.LoginPopUpTest" time="279.956" errors="0" timestamp="2022-07-14T14:44:36 AMT">
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="14.355">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: target window already closed
from unknown error: web view not found
  (Session info: MicrosoftEdge=103.0.1264.49)
Build info: version: &amp;apos;4.2.1&amp;apos;, revision: &amp;apos;ac4d0fdd4a&amp;apos;
System info: host: &amp;apos;DESKTOP-PO3T4V3&amp;apos;, ip: &amp;apos;10.50.17.113&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.2&amp;apos;
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [ee4e63ec492e78ec3aed8bf17022de20, findElement {using=xpath, value=//span[text()= &amp;apos;English&amp;apos;]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.49, ms:edgeOptions: {debuggerAddress: localhost:62964}, msedge: {msedgedriverVersion: 103.0.1264.49 (abaa9303c229..., userDataDir: C:\Users\NERSES~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:62964/devtoo..., se:cdpVersion: 103.0.1264.49, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ee4e63ec492e78ec3aed8bf17022de20">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: MicrosoftEdge=103.0.1264.49)
Build info: version: '4.2.1', revision: 'ac4d0fdd4a'
System info: host: 'DESKTOP-PO3T4V3', ip: '10.50.17.113', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [ee4e63ec492e78ec3aed8bf17022de20, findElement {using=xpath, value=//span[text()= 'English']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.49, ms:edgeOptions: {debuggerAddress: localhost:62964}, msedge: {msedgedriverVersion: 103.0.1264.49 (abaa9303c229..., userDataDir: C:\Users\NERSES~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:62964/devtoo..., se:cdpVersion: 103.0.1264.49, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: ee4e63ec492e78ec3aed8bf17022de20
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:551)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:369)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:361)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.toString(Unknown Source)
at java.base/java.lang.String.valueOf(String.java:4215)
at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
at org.openqa.selenium.support.ui.ExpectedConditions$10.toString(ExpectedConditions.java:298)
at java.base/java.lang.String.valueOf(String.java:4215)
at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at pageObjects.BasePage.waitElementToBeVisible(BasePage.java:73)
at pageObjects.BasePage.clickOnElementIfVisible(BasePage.java:84)
at pageObjects.CraftBet_Header_Page.selectEnglishLanguageFromDropDown(CraftBet_Header_Page.java:88)
at testCases.BaseTest.setup(BaseTest.java:67)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 37 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.PasswordRecoveryTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.PasswordRecoveryTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.PasswordRecoveryTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.PasswordRecoveryTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="10.403">
    <failure type="org.openqa.selenium.NoSuchWindowException" message="no such window: target window already closed
from unknown error: web view not found
  (Session info: MicrosoftEdge=103.0.1264.49)
Build info: version: &amp;apos;4.2.1&amp;apos;, revision: &amp;apos;ac4d0fdd4a&amp;apos;
System info: host: &amp;apos;DESKTOP-PO3T4V3&amp;apos;, ip: &amp;apos;10.50.17.113&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.2&amp;apos;
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [76ea3d648784d23828cad282da7d9176, findElement {using=xpath, value=//button[@class = &amp;apos;global_register-btn button-style1-type-btn&amp;apos;]}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.49, ms:edgeOptions: {debuggerAddress: localhost:63087}, msedge: {msedgedriverVersion: 103.0.1264.49 (abaa9303c229..., userDataDir: C:\Users\NERSES~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:63087/devtoo..., se:cdpVersion: 103.0.1264.49, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 76ea3d648784d23828cad282da7d9176">
      <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: MicrosoftEdge=103.0.1264.49)
Build info: version: '4.2.1', revision: 'ac4d0fdd4a'
System info: host: 'DESKTOP-PO3T4V3', ip: '10.50.17.113', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [76ea3d648784d23828cad282da7d9176, findElement {using=xpath, value=//button[@class = 'global_register-btn button-style1-type-btn']}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 103.0.1264.49, ms:edgeOptions: {debuggerAddress: localhost:63087}, msedge: {msedgedriverVersion: 103.0.1264.49 (abaa9303c229..., userDataDir: C:\Users\NERSES~1\AppData\L...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:63087/devtoo..., se:cdpVersion: 103.0.1264.49, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 76ea3d648784d23828cad282da7d9176
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:551)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:369)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:361)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.toString(Unknown Source)
at java.base/java.lang.String.valueOf(String.java:4215)
at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
at org.openqa.selenium.support.ui.ExpectedConditions$10.toString(ExpectedConditions.java:298)
at java.base/java.lang.String.valueOf(String.java:4215)
at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at pageObjects.BasePage.waitElementToBeVisible(BasePage.java:73)
at pageObjects.CraftBet_Header_Page.clickOnSignUp(CraftBet_Header_Page.java:20)
at testCases.SignUpQuickRegisterTest.goToLoginPopUp(SignUpQuickRegisterTest.java:18)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 38 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.BaseTest" name="@BeforeMethod setup" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="@BeforeMethod goToLoginPopUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod goToLoginPopUp -->
  <testcase classname="testCases.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLabelsPresenceVerification_Test" time="0.631"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogoPresenceVerification_Test" time="0.071"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpCloseButtonFunctionality_Test" time="0.63"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpEyeButtonFunctionality_Test" time="0.333"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpRememberMeLabelClickAbility_Test" time="0.294"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpCheckBoxClickAbility_Test" time="0.225"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpForgotPasswordLink_Test" time="0.138"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpSignUpLink_Test" time="0.199"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInPositiveTest" time="1.68"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="10.37"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="2.459">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at testCases.LoginPopUpTest.loginPopUpLogInNegativeTest(LoginPopUpTest.java:197)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- loginPopUpLogInNegativeTest -->
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="1.762">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at testCases.LoginPopUpTest.loginPopUpLogInNegativeTest(LoginPopUpTest.java:197)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- loginPopUpLogInNegativeTest -->
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="10.818"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="10.309"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="1.721">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at testCases.LoginPopUpTest.loginPopUpLogInNegativeTest(LoginPopUpTest.java:197)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- loginPopUpLogInNegativeTest -->
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="1.717">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at testCases.LoginPopUpTest.loginPopUpLogInNegativeTest(LoginPopUpTest.java:197)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- loginPopUpLogInNegativeTest -->
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="1.778">
    <failure type="java.lang.AssertionError" message="expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at testCases.LoginPopUpTest.loginPopUpLogInNegativeTest(LoginPopUpTest.java:197)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- loginPopUpLogInNegativeTest -->
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="30.413"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpLogInNegativeTest" time="10.412"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpErrorMessageValidationInvalidUsername" time="1.455"/>
  <testcase classname="testCases.LoginPopUpTest" name="loginPopUpErrorMessageValidationInvalidPassword" time="1.401"/>
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpLabelsPresenceVerification_Test" time="0.191"/>
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpLogoPresenceVerification_Test" time="0.03"/>
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpSupportLink_Test" time="0.297">
    <failure type="java.lang.AssertionError" message="did not expect [https://craftbet.com/forgot-password] but found [https://craftbet.com/forgot-password]">
      <![CDATA[java.lang.AssertionError: did not expect [https://craftbet.com/forgot-password] but found [https://craftbet.com/forgot-password]
at testCases.PasswordRecoveryTest.RecoveryPopUpSupportLink_Test(PasswordRecoveryTest.java:78)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 35 stack frames]]>
    </failure>
  </testcase> <!-- RecoveryPopUpSupportLink_Test -->
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpPositiveTest" time="0.643"/>
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpNegativeTest" time="0.274"/>
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpNegativeTest" time="0.219"/>
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- RecoveryPopUpNegativeTest -->
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- RecoveryPopUpNegativeTest -->
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- RecoveryPopUpNegativeTest -->
  <testcase classname="testCases.PasswordRecoveryTest" name="RecoveryPopUpNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- RecoveryPopUpNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterLabelsPresenceVerification_Test" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterLabelsPresenceVerification_Test -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterLogoPresenceVerification_Test" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterLogoPresenceVerification_Test -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterRegisterByDropDownVerification_Test" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterRegisterByDropDownVerification_Test -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterCurrencyDropDownVerification_Test" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterCurrencyDropDownVerification_Test -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpCloseButtonFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpCloseButtonFunctionality -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterRegisterPrivacyPolicy" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterRegisterPrivacyPolicy -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpTermsAndConditionsLinkFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpTermsAndConditionsLinkFunctionality -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpLogInLinkFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpLogInLinkFunctionality -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickFullRegistrationButtonFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickFullRegistrationButtonFunctionality -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithEmailPositiveTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithEmailPositiveTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithEmailNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithEmailNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithMobilePositiveTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithMobilePositiveTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
  <testcase classname="testCases.SignUpQuickRegisterTest" name="SignUpPopUpQuickRegisterWithMobileNegativeTest" time="0.0">
    <skipped/>
  </testcase> <!-- SignUpPopUpQuickRegisterWithMobileNegativeTest -->
  <testcase classname="testCases.BaseTest" name="@AfterSuite finish" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite finish -->
  <testcase classname="testCases.BaseTest" name="@AfterSuite finish" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite finish -->
</testsuite> <!-- testCases.LoginPopUpTest -->
